{"version":3,"sources":["Component/Icon.js","App.js","index.js"],"names":["Icon","choice","className","tictacArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","index","toast","type","includes","findWinner","Container","position","Row","Col","md","Button","onClick","style","color","textAlign","fontWeight","map","value","Card","CardBody","ReactDOM","render","document","getElementById"],"mappings":"oLAaeA,EAVF,SAAC,GACV,OADqB,EAAVC,QAEP,IAAK,QACD,OAAO,cAAC,IAAD,CAASC,UAAU,SAC9B,IAAK,SACD,OAAO,cAAC,IAAD,CAAaA,UAAU,SAClC,QACI,MAAO,K,+DCEfC,G,YAAa,IAAIC,MAAM,GAAGC,KAAK,KAyHpBC,EAxHH,WACR,MAA2BC,qBAA3B,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAAiCF,mBAAS,IAA1C,mBAAKG,EAAL,KAAgBC,EAAhB,KAuDMC,EAAa,SAACC,GAChB,OAAGH,EACQI,YAAM,YAAY,CAACC,KAAK,YAEX,IAArBZ,EAAYU,GAKJC,YAAM,uBAAuB,CAACC,KAAK,WAJ1CZ,EAAYU,GAASL,EAAS,QAAU,SACxCC,GAAYD,QA1CH,WA6Bb,GA5BGL,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAsB,IAAhBA,EAAY,GACjFQ,EAAcR,EAAY,GAAG,YAExBA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAsB,IAAhBA,EAAY,GACrFQ,EAAcR,EAAY,GAAG,YAEzBA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAsB,IAAhBA,EAAY,GACrFQ,EAAcR,EAAY,GAAG,YAEzBA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAMA,EAAY,GACrFQ,EAAcR,EAAY,GAAG,YAEzBA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAMA,EAAY,GACrFQ,EAAcR,EAAY,GAAG,YAEzBA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAMA,EAAY,IAGjFA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAMA,EAAY,GAFrFQ,EAAcR,EAAY,GAAG,YAKzBA,EAAY,IAAKA,EAAY,IAAMA,EAAY,IAAIA,EAAY,IAAMA,EAAY,IACrFQ,EAAcR,EAAY,GAAG,aAKjBA,EAAYa,SAAS,IAEjCL,EAAc,uBACPG,YAAO,gBAAgB,CAACC,KAAK,SAgBxCE,KAGJ,OACI,eAACC,EAAA,EAAD,CAAWhB,UAAU,MAArB,UACE,cAAC,IAAD,CAAgBiB,SAAS,gBAAzB,eACC,cAACC,EAAA,EAAD,UAEG,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGpB,UAAU,cAAtB,UAEKQ,EACI,gCACA,oBAAIR,UAAU,cAAd,SACCQ,IAED,cAACa,EAAA,EAAD,CAAQC,QAtEX,WACZf,GAAW,GACXE,EAAc,IACdR,EAAYE,KAAK,KAmEF,4BAGA,oBAAIoB,MAAO,CAACC,MAAM,SAAlB,SACKlB,EAAS,eAAgB,kBAKpC,uBACG,sBAAMiB,MAAO,CAACE,UAAW,SAASD,MAAM,QAAQE,WAAW,QAA3D,4BAEI,wBAAQ1B,UAAU,MAAMuB,MAAO,CAACE,UAAW,UAAYH,QA1FxD,WACff,GAAW,IAyFK,SAA4E,cAAC,IAAD,MAC5E,wBAAQP,UAAU,MAAMuB,MAAO,CAACE,UAAW,UAAWH,QAvFtD,WAChBf,GAAW,IAsFK,SAA4E,cAAC,IAAD,SAGpF,qBAAKP,UAAU,OAAf,SACOC,EAAY0B,KAAI,SAACC,EAAMjB,GAAP,OACb,cAACkB,EAAA,EAAD,CAAMP,QAAS,kBAAIZ,EAAWC,IAA9B,SACI,cAACmB,EAAA,EAAD,CAAU9B,UAAU,MAApB,SACE,cAAC,EAAD,CAAOD,OAAQE,EAAYU,uBC7G3DoB,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f66cd61d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaTimes,FaRegCircle} from \"react-icons/fa\";\r\n\r\nconst Icon = ({choice})=>{\r\n    switch(choice){\r\n        case \"cross\":\r\n            return <FaTimes className=\"icon\"/>;\r\n        case \"circle\": \r\n            return <FaRegCircle className=\"icon\" />;\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\nexport default Icon","import React,{useState} from \"react\"\r\nimport Icons from\"./Component/Icon\"\r\nimport { FaTimes,FaRegCircle } from \"react-icons/fa\"\r\n\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport { Button,Container,Card,CardBody,Row,Col} from \"reactstrap\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport \"./style.css\"\r\n\r\n\r\nlet tictacArray= new Array(9).fill(\"\")\r\nconst App = ()=>{\r\n    let [isCross,setIsCross] = useState()\r\n    let [winMessage,setWinMessage] = useState(\"\")\r\n\r\n    \r\n    const choiceIcon = ()=>{\r\n        setIsCross(true)\r\n    }\r\n\r\n    const choiceIcons = ()=>{\r\n        setIsCross(false)\r\n    }\r\n   \r\n    const playAgain=()=>{\r\n        setIsCross(true)\r\n        setWinMessage(\"\")\r\n        tictacArray.fill(\"\")\r\n    }\r\n\r\n\r\n\r\n    const findWinner=()=>{\r\n        if(tictacArray[0]== tictacArray[1] && tictacArray[0]==tictacArray[2] && tictacArray[0]!=\"\"){\r\n           setWinMessage(tictacArray[0]+\" has won\")\r\n        }\r\n        else if(tictacArray[3]== tictacArray[4] && tictacArray[3]==tictacArray[5] && tictacArray[3]!=\"\"){\r\n            setWinMessage(tictacArray[3]+\" has won\")\r\n        }\r\n        else if(tictacArray[6]== tictacArray[7] && tictacArray[6]==tictacArray[8] && tictacArray[6]!=\"\"){\r\n            setWinMessage(tictacArray[6]+\" has won\")\r\n        }\r\n        else if(tictacArray[0]== tictacArray[3] && tictacArray[0]==tictacArray[6] && tictacArray[0]){\r\n            setWinMessage(tictacArray[0]+\" has won\")\r\n        }\r\n        else if(tictacArray[1]== tictacArray[4] && tictacArray[1]==tictacArray[7] && tictacArray[1]){\r\n            setWinMessage(tictacArray[1]+\" has won\")\r\n        }\r\n        else if(tictacArray[2]== tictacArray[5] && tictacArray[2]==tictacArray[8] && tictacArray[2]){\r\n            setWinMessage(tictacArray[2]+\" has won\")\r\n        }\r\n        else if(tictacArray[2]== tictacArray[4] && tictacArray[2]==tictacArray[6] && tictacArray[2]){\r\n            setWinMessage(tictacArray[2]+\" has won\")\r\n        }\r\n        else if(tictacArray[0]== tictacArray[4] && tictacArray[0]==tictacArray[8] && tictacArray[0]){\r\n            setWinMessage(tictacArray[0]+\" has won\")\r\n        }\r\n\r\n\r\n\r\n        let MatchTie = !tictacArray.includes(\"\")\r\n        if(MatchTie){\r\n            setWinMessage(\"'Draw,Try Again..!'\")\r\n            return toast( \"Its A Tie..!!\",{type:\"dark\"})\r\n        }\r\n    }\r\n    \r\n\r\n    const changeItem = (index)=>{\r\n        if(winMessage){\r\n            return toast(\"Game Over\",{type:\"success\"})\r\n        }\r\n        if(tictacArray[index] ==\"\"){\r\n            tictacArray[index] = isCross? \"cross\" : \"circle\"  \r\n            setIsCross(!isCross)\r\n        }\r\n        else{\r\n            return toast(\"Tap On Right Place..\",{type:\"error\"})\r\n        }\r\n        findWinner()\r\n    }\r\n\r\n    return(\r\n        <Container className=\"p-5\"> \r\n          <ToastContainer position=\"bottom-center\" > </ToastContainer>\r\n           <Row> \r\n\r\n              <Col md={6} className=\"offset-md-3\"> \r\n                 {\r\n                   winMessage? (\r\n                       <div>\r\n                       <h1 className=\"text-center\"> \r\n                       {winMessage}\r\n                       </h1>\r\n                       <Button onClick={playAgain}> Play Again</Button>\r\n                       </div>\r\n                   ) : (\r\n                       <h1 style={{color:\"white\"}}>\r\n                           {isCross? \"Cross's Turn\": \"Circle's Turn\"}\r\n                       </h1>\r\n                   )\r\n\r\n                 } \r\n                 <br />\r\n                    <div  style={{textAlign: \"center\",color:\"black\",fontWeight:\"bold\"}}>\r\n                        Choose Icons :- \r\n                        <button className=\"btn\" style={{textAlign: \"center\"}}  onClick={choiceIcon}><FaTimes /></button>\r\n                        <button className=\"btn\" style={{textAlign: \"center\"}} onClick={choiceIcons}><FaRegCircle /></button>\r\n                    </div>\r\n                  \r\n                <div className=\"grid\"> \r\n                      {tictacArray.map((value,index)=>(\r\n                          <Card onClick={()=>changeItem(index)}> \r\n                              <CardBody className=\"box\"> \r\n                                <Icons choice={tictacArray[index]}/>\r\n                            </CardBody>\r\n                        </Card>\r\n                    ))}\r\n\r\n                </div>\r\n\r\n\r\n              \r\n            </Col>\r\n\r\n           </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\n\r\n\r\n\r\nReactDOM.render( <App />, document.getElementById(\"root\"))"],"sourceRoot":""}